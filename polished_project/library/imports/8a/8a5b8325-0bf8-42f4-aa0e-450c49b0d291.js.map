{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\GameUiTools.js"],"names":["GameConfig","require","GameTools","GameUiTools","newSprite","spriteName","isCache","sprite","cc","Node","split","addComponent","Sprite","spriteFrame","love2048FrameCache","getSpriteFrame","SpriteFrame","setNodeSpriteFrame","node","getComponent","setButtonClickEvents","component","menu","handler","customEventData","isScale","arrayMenu","Array","length","undefined","i","clickEventHandler","Component","EventHandler","target","name","button","Button","clickEvents","push","transition","Transition","SCALE","duration","zoomScale","scheduleOnce","callFunc","delay","runAction","sequence","delayTime","loadingScene","sceneName","isShowLayer","loader","loadRes","err","prefab","instantiate","director","getScene","children","addChild","preloadScene","loadScene","loadingLayer","panelName","module","exports"],"mappings":"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","file":"GameUiTools.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var GameConfig = require(\"GameConfig\");\nvar GameTools = require(\"GameTools\");\nvar GameUiTools = {\n    newSprite: function (spriteName,isCache) {\n        let sprite = new cc.Node();\n        if(isCache){\n            spriteName = spriteName.split('.')[0];\n            sprite.addComponent(cc.Sprite).spriteFrame = GameTools.love2048FrameCache.getSpriteFrame(spriteName);\n        }else {\n            sprite.addComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(\"res/raw-assets/resources/\" + spriteName);\n        }\n        return sprite;\n    },\n    setNodeSpriteFrame: function (node, spriteName) {\n        node.getComponent(cc.Sprite).spriteFrame = GameTools.love2048FrameCache.getSpriteFrame(spriteName);\n    },\n    setButtonClickEvents: function (component, menu, handler, customEventData,isScale) {\n        let arrayMenu = new Array();\n        if (menu.length == undefined) {\n            arrayMenu[0] = menu;\n\n        } else {\n            arrayMenu = menu;\n        }\n        for (let i = 0; i < arrayMenu.length; i++) {\n            let clickEventHandler = new cc.Component.EventHandler();\n            clickEventHandler.target = component.node; //这个 node 节点是你的事件处理代码组件所属的节点\n            clickEventHandler.component = component.node.name;//这个是代码文件名\n            clickEventHandler.handler = handler;\n            if (menu.length == undefined) {\n                clickEventHandler.customEventData = customEventData;\n            } else {\n                clickEventHandler.customEventData = i;\n            }\n            let button = arrayMenu[i].addComponent(cc.Button);\n            button.clickEvents.push(clickEventHandler);\n            if(isScale == undefined || isScale) {\n                button.transition = cc.Button.Transition.SCALE;\n                button.duration = 0.1;\n                button.zoomScale = 1.2;\n            }\n        }\n    },\n    scheduleOnce: function (node, callFunc, delay) {//事件调度\n        node.runAction(cc.sequence(cc.delayTime(delay), cc.callFunc(callFunc, node)));\n    },\n    loadingScene(sceneName, isShowLayer) {//加载场景\n        if (isShowLayer) {\n            cc.loader.loadRes(\"panel/LoadingLayer\", (err, prefab) => {\n                var node = cc.instantiate(prefab);\n                cc.director.getScene().children[0].addChild(node);\n                cc.director.preloadScene(sceneName, () => {\n                    cc.director.loadScene(sceneName);\n                });\n            });\n        } else {\n            cc.director.preloadScene(sceneName, () => {\n                cc.director.loadScene(sceneName);\n            });\n        }\n    },\n    loadingLayer(panelName) {//加载图层\n        cc.loader.loadRes(panelName, (err, prefab) => {\n            if (!err) {\n                let node = cc.instantiate(prefab);\n                cc.director.getScene().children[0].addChild(node);\n            }\n        });\n    }\n};\nmodule.exports = GameUiTools;"]}